'use strict';

const defaultContent = `<p><strong>–ú–æ–ª–æ–∫–æ</strong> ‚Äî –æ–¥–∏–Ω –∏–∑ –≤–∞–∂–Ω–µ–π—à–∏—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –≤ —Ä–∞—Ü–∏–æ–Ω–µ –ø–∏—Ç–∞–Ω–∏—è —á–µ–ª–æ–≤–µ–∫–∞. –°—Ä–µ–¥–Ω–∏–π —Ä–æ—Å—Å–∏—è–Ω–∏–Ω –≤—ã–ø–∏–≤–∞–µ—Ç –±–æ–ª–µ–µ <span style="color:red;">170</span> –ª–∏—Ç—Ä–æ–≤ –º–æ–ª–æ–∫–∞ –≤ –≥–æ–¥. <strong>–ú–æ–ª–æ–∫–æ</strong> ‚Äî —Ü–µ–Ω–Ω–µ–π—à–∏–π –∏—Å—Ç–æ—á–Ω–∏–∫ –º–∏–Ω–µ—Ä–∞–ª–æ–≤, –∏ –≤ –ø–µ—Ä–≤—É—é –æ—á–µ—Ä–µ–¥—å, –∫–∞–ª—å—Ü–∏—è, –∞ —Ç–∞–∫–∂–µ –≤–∏—Ç–∞–º–∏–Ω–æ–≤. –ù–∞ –º–æ–ª–æ–∫–µ –≤–∞—Ä—è—Ç –∫–∞—à–∏, –ø–µ–∫—É—Ç –±–ª–∏–Ω—ã, –∑–∞–º–µ—à–∏–≤–∞—é—Ç —Ç–µ—Å—Ç–æ, –¥–æ–±–∞–≤–ª—è—é—Ç –≤ –∫–æ—Ñ–µ. –≠—Ç–æ, –µ—Å–ª–∏ –º–æ–ª–æ–∫–æ –Ω–∞—Å—Ç–æ—è—â–µ–µ, –∞ –Ω–µ —Ñ–∞–ª—å—Å–∏—Ñ–∏–∫–∞—Ç.</p>`;

const content = document.querySelector('.content');
const btnEdit = document.querySelector('.btn_edit');
const btnSave = document.querySelector('.btn_save');
const btnDel = document.querySelector('.btn_del');
const btnExit = document.querySelector('.btn_exit');
const select = document.getElementById('select');

btnEdit.addEventListener('click', editContent);
btnSave.addEventListener('click', saveContent);
btnDel.addEventListener('click', delContent);
btnExit.addEventListener('click', exit);
select.addEventListener('change', changeSelect);

const arr = []; // array –∫–ª—é—á–µ–π —Ä–µ–¥–∞–∫—Ü–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç–∞
let curKey = null;

// –ü–æ–ª—É—á–∞–µ–º —Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–ª—é—á–∏ –∏–∑ localStorage
function getKeys() {
  let length = localStorage.length;

  // –ó–∞–ø–æ–ª–Ω—è–µ–º –º–∞—Å—Å–∏–≤ –∫–ª—é—á–∞–º–∏ –∏–∑ localStorage
  for (let i = 0; i < length; i++) {
    arr.push(localStorage.key(i));
  }
  // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ localStorage
  arr.sort((a, b) => a - b);
}

function getDataStore(key) {
  //–ï—Å–ª–∏ key –Ω–µ –∑–∞–¥–∞–Ω –±–µ—Ä—ë–º –ø–æ—Å–ª–µ–¥–Ω–∏–π key –∏–∑ localStorage
  !key ? (key = arr[arr.length - 1]) : key;

  // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –∫–æ–Ω—Ç–µ–Ω—Ç –∑–Ω–∞—á–µ–Ω–∏–µ key –∏–∑ localStorage
  // –ï—Å–ª–∏ localStorage –ø—É—Å—Ç–æ–π, –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º  default –∑–Ω–∞—á–µ–Ω–∏–µ
  let dataStore = localStorage.getItem(key) || defaultContent;
  curKey = key; // Key –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
  content.innerHTML = dataStore;
}

function editContent() {
  content.contentEditable = true;
  content.style.background = 'ivory';
  btnEdit.disabled = true;
  select.disabled = true;
  btnSave.style.display = 'inline';
  btnDel.style.display = 'inline';
  btnExit.style.display = 'inline';
}

function exit() {
  location.reload(); // ü§¢
}

function saveContent() {
  localStorage.setItem(Date.now(), content.innerHTML);

  content.contentEditable = false;
  content.style.background = 'white';
  btnSave.style.display = 'none';
  btnDel.style.display = 'none';
  btnExit.style.display = 'none';
  btnEdit.disabled = false;
  select.disabled = false;

  location.reload(); // ü§¢
}

function createSelectOptions() {
  // –ó–∞–ø–æ–ª–Ω—è–µ–º select
  let options = arr.map((el, index) => {
    // –ü–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç selected
    let sel = index + 1 == arr.length ? 'selected' : '';
    let opt = `<option ${sel} value=${el}>–†–µ–¥–∞–∫—Ü–∏—è ${index + 1}</option>`;
    return opt;
  });
  select.innerHTML = options;
}

function changeSelect() {
  getDataStore(this.value);
}

function delContent() {
  localStorage.removeItem(curKey);
  location.reload(); // ü§¢
}

getKeys();
getDataStore();
createSelectOptions();
