'use strict';

// –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω–æ–µ —Å—Ä–µ–¥—Å—Ç–≤–æ - –±–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å
class Vehicle {
  constructor(options) {
    this.name = options.name;
    this.type = options.type;
    this.speed = options.speed;
    this.units = options.units;
    this.wheel = 4;
  }
  getInfo() {
    console.log(
      `       –¢–∏–ø: ${this.type},
       –ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ: ${this.name},
       –°–∫–æ—Ä–æ—Å—Ç—å: ${this.speed} ${this.units}
       –ö–æ–ª-–≤–æ –∫–æ–ª—ë—Å: ${this.wheel}`
    );
  }
}

// –ê–≤—Ç–æ–º–æ–±–∏–ª—å, –¥–æ—á–µ—Ä–Ω–∏–π –∫–ª–∞—Å—Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –æ—Ç –ë–∞–∑–æ–≤–æ–≥–æ –∫–ª–∞—Å—Å–∞
class Car extends Vehicle {
  constructor(options) {
    super(options);
    this.name = options.name;
    this.type = options.type;
    this.speed = options.speed;
    this.units = options.units;
    this.clearance = options.clearance;
  }
  getInfo() {
    console.log(
      `       –¢–∏–ø: ${this.type},
       –ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ: ${this.name}, 
       –°–∫–æ—Ä–æ—Å—Ç—å: ${this.speed} ${this.units}, 
       –î–æ—Ä–æ–∂–Ω—ã–π –ø—Ä–æ—Å–≤–µ—Ç: ${this.clearance} –º–º
       –ö–æ–ª-–≤–æ –∫–æ–ª—ë—Å: ${this.wheel}`
    );
  }
}

// –°–∞–º–æ–ª—ë—Ç, –¥–æ—á–µ—Ä–Ω–∏–π –∫–ª–∞—Å—Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –æ—Ç –ë–∞–∑–æ–≤–æ–≥–æ –∫–ª–∞—Å—Å–∞
class Plane extends Vehicle {
  constructor(options) {
    super(options);
    this.wheel = options.wheel;
  }
}

// –ö–æ—Ä–∞–±–ª—å, –¥–æ—á–µ—Ä–Ω–∏–π –∫–ª–∞—Å—Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –æ—Ç –ë–∞–∑–æ–≤–æ–≥–æ –∫–ª–∞—Å—Å–∞
class Ship extends Vehicle {
  constructor(options) {
    super(options);
    this.wheel = options.wheel;
  }
}

let car = new Car({
  name: 'Toyota',
  type: 'üöó –∞–≤—Ç–æ–º–æ–±–∏–ª—å',
  speed: 270,
  units: '–∫–º/—á',
  clearance: 210,
});

let plane = new Plane({
  name: 'T—É 134',
  type: 'üõ´ —Å–∞–º–æ–ª—ë—Ç',
  speed: 546.8,
  units: '–º–∏–ª—å/—á',
  wheel: 10,
});
let ship = new Ship({
  name: '–ê–≤—Ä–æ—Ä–∞',
  type: 'üõ•Ô∏è –∫—Ä–µ–π—Å–µ—Ä',
  speed: 13,
  units: '—É–∑–ª–æ–≤',
  wheel: '–Ω–µ—Ç',
});

car.getInfo();
plane.getInfo();
ship.getInfo();
